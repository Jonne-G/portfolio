{
    "version": "https://jsonfeed.org/version/1",
    "title": "Jonne Geven",
    "description": "",
    "home_page_url": "https://jonne-g.github.io/portfolio",
    "feed_url": "https://jonne-g.github.io/portfolio/feed.json",
    "user_comment": "",
    "author": {
        "name": "Jonne Geven"
    },
    "items": [
        {
            "id": "https://jonne-g.github.io/portfolio/portfolio/",
            "url": "https://jonne-g.github.io/portfolio/portfolio/",
            "title": "Portfolio",
            "content_html": "\n    <figure class=\"post__image post__image--wide\">\n      <a href=\"https://jonne-g.github.io/portfolio/roof-generator/\">\n        <img decoding=\"async\" loading=\"lazy\" src=\"https://jonne-g.github.io/portfolio/media/posts/9/roof_generator_banner.png\" sizes=\"100vw\" srcset=\"https://jonne-g.github.io/portfolio/media/posts/9/responsive/roof_generator_banner-xs.png 300w ,https://jonne-g.github.io/portfolio/media/posts/9/responsive/roof_generator_banner-sm.png 480w ,https://jonne-g.github.io/portfolio/media/posts/9/responsive/roof_generator_banner-md.png 768w ,https://jonne-g.github.io/portfolio/media/posts/9/responsive/roof_generator_banner-lg.png 1024w ,https://jonne-g.github.io/portfolio/media/posts/9/responsive/roof_generator_banner-xl.png 1360w ,https://jonne-g.github.io/portfolio/media/posts/9/responsive/roof_generator_banner-2xl.png 1600w\"  height=\"150\" width=\"1440\" alt=\"\" />\n      </a>\n      \n    </figure>\n\n    <figure class=\"post__image post__image--wide\">\n      <a href=\"https://jonne-g.github.io/portfolio/material-browser/\">\n        <img decoding=\"async\" loading=\"lazy\" src=\"https://jonne-g.github.io/portfolio/media/posts/9/material_browser_banner.png\" sizes=\"100vw\" srcset=\"https://jonne-g.github.io/portfolio/media/posts/9/responsive/material_browser_banner-xs.png 300w ,https://jonne-g.github.io/portfolio/media/posts/9/responsive/material_browser_banner-sm.png 480w ,https://jonne-g.github.io/portfolio/media/posts/9/responsive/material_browser_banner-md.png 768w ,https://jonne-g.github.io/portfolio/media/posts/9/responsive/material_browser_banner-lg.png 1024w ,https://jonne-g.github.io/portfolio/media/posts/9/responsive/material_browser_banner-xl.png 1360w ,https://jonne-g.github.io/portfolio/media/posts/9/responsive/material_browser_banner-2xl.png 1600w\"  height=\"150\" width=\"1440\" alt=\"\" />\n      </a>\n      \n    </figure>\n\n    <figure class=\"post__image post__image--wide\">\n      <a href=\"https://jonne-g.github.io/portfolio/houdini-pipeline/\">\n        <img decoding=\"async\" loading=\"lazy\" src=\"https://jonne-g.github.io/portfolio/media/posts/9/houdini_pipe_banner.png\" sizes=\"100vw\" srcset=\"https://jonne-g.github.io/portfolio/media/posts/9/responsive/houdini_pipe_banner-xs.png 300w ,https://jonne-g.github.io/portfolio/media/posts/9/responsive/houdini_pipe_banner-sm.png 480w ,https://jonne-g.github.io/portfolio/media/posts/9/responsive/houdini_pipe_banner-md.png 768w ,https://jonne-g.github.io/portfolio/media/posts/9/responsive/houdini_pipe_banner-lg.png 1024w ,https://jonne-g.github.io/portfolio/media/posts/9/responsive/houdini_pipe_banner-xl.png 1360w ,https://jonne-g.github.io/portfolio/media/posts/9/responsive/houdini_pipe_banner-2xl.png 1600w\"  height=\"150\" width=\"1440\" alt=\"\" />\n      </a>\n      \n    </figure>\n\n  <p>\n    \n  </p>",
            "author": {
                "name": "Jonne Geven"
            },
            "tags": [
            ],
            "date_published": "2022-04-20T17:03:04+03:00",
            "date_modified": "2022-04-20T17:25:47+03:00"
        },
        {
            "id": "https://jonne-g.github.io/portfolio/houdini-pipeline/",
            "url": "https://jonne-g.github.io/portfolio/houdini-pipeline/",
            "title": "Houdini Pipeline",
            "summary": "&lt; SOME DEMONSTRATION OF THE HOUDINI PIPE &gt; Build almost from scratch, the Remedy Houdini-environment is the main way of interacting with Houdini at Remedy. As its sole developer, my task was to create an environment that would allow for management of HDAs (Houdini Digital&hellip;",
            "content_html": "\n    <h2 id=\"lt-some-demonstration-of-the-houdini-pipe-gt\">\n      &lt; SOME DEMONSTRATION OF THE HOUDINI PIPE &gt;\n    </h2>\n\n  <p>\n    Build almost from scratch, the Remedy Houdini-environment is the main way of interacting with Houdini at Remedy.<br>As its sole developer, my task was to create an environment that would allow for management of HDAs (Houdini Digital Assets) on multiple projects, as well as making said HDAs easy to create and update.\n  </p>\n\n  <p>\n    Over the various iterations the \"backend\" went through, the current version has three main components:\n  </p>\n\n    <h6 id=\"1-launching-houdini\">\n      1. Launching Houdini\n    </h6>\n\n  <p>\n    When the user clicks one of the shortcuts (Houdini core, FX, and Apprentice) a setup script is triggered with a project specific configuration file.<br>Said configuration file holds information about what python-modules to load; which version of Houdini to use; miscellaneous environment variables; and which HDAs to import. This startup script essentially sets up the environment.\n  </p>\n\n    <h6 id=\"2-importing-hdas\">\n      2. Importing HDAs\n    </h6>\n\n  <p>\n    The project HDAs are imported using a custom importation process.<br>A project can also define which HDAs are hidden or locked.<br>Here \"locking\" a HDA refers to limiting the version of an asset during loading.<br>This is feature is intended to be used on projects locking their codebase during the final shipping phase of the project. It is also the reason the Houdini-native package system wasn't used, it didn't support locking HDAs on a specific version.\n  </p>\n\n    <h6 id=\"3-hda-management\">\n      3. HDA Management\n    </h6>\n\n  <p>\n    The final component of the Remedy Houdini-environment isn't specifically a launch-specific process, rather its a set of tools for managing HDAs.<br>Its main purpose is to reduce/remove human error and give the users more time to do their work.<br>To achieve this, the management system automates HDA creation, versioning, and various perforce commands (shelve, submit, and in special cases, checkout).<br>The ease-of-use features are described in further detail below.\n  </p>",
            "author": {
                "name": "Jonne Geven"
            },
            "tags": [
            ],
            "date_published": "2022-04-15T21:41:03+03:00",
            "date_modified": "2022-04-15T21:41:03+03:00"
        },
        {
            "id": "https://jonne-g.github.io/portfolio/roof-generator/",
            "url": "https://jonne-g.github.io/portfolio/roof-generator/",
            "title": "Roof Generator",
            "summary": "Near the end of development on CrossfireX: Operation Spectre, it became clear it wouldn't be possible for the modelling department to populate the entire level with roofs. There was simply too much to do. The brief was simple: Create a tool that can quickly make&hellip;",
            "content_html": "<div><div class=\"post__iframe\"><iframe loading=\"lazy\" width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/_Dx9DBkYdtQ\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></div></div>\n\n  <p>\n    Near the end of development on CrossfireX: Operation Spectre, it became clear it wouldn't be possible for the modelling department to populate the entire level with roofs. There was simply too much to do.\n  </p>\n\n  <p>\n    The brief was simple: Create a tool that can quickly make roof&nbsp; geometry and make it work inside Maya using Houdini Engine.<br>Since the roofs were only visible from afar or from below, it was possible to use relatively simple geometry and focus on making the system quick, and easy to use.<br>\n  </p>\n\n  <p>\n    Though making the tool work properly with Houdini engine in Maya was a real challenge, the final result helped speed up work on the level freeing up time for the artists to work on other parts of the project.<br>\n  </p>\n\n    <h2 id=\"using-the-tool-in-maya\">\n      Using the tool in Maya\n    </h2>\n\n  <p>\n    To make the process of creating roofs as fast as possible, the process was made into a borderline one-click process.<br>Below you can see a demonstration of the three modes the tool operates on in Maya:\n  </p>\n\n    <h4 id=\"object-mode\">\n      Object mode\n    </h4>\n\n    <figure class=\"post__image post__image--center\">\n      <img decoding=\"async\" loading=\"lazy\" src=\"https://jonne-g.github.io/portfolio/media/posts/7/roof_generator-making_off-object_selection.gif\" height=\"450\" width=\"800\" alt=\"object selection inside Maya\" />\n      \n    </figure>\n\n    <h4 id=\"face-mode\">\n      Face mode\n    </h4>\n\n    <figure class=\"post__image post__image--center\">\n      <img decoding=\"async\" loading=\"lazy\" src=\"https://jonne-g.github.io/portfolio/media/posts/7/roof_generator-making_off-face_selection-2.gif\" height=\"450\" width=\"800\" alt=\"face selection in maya\" />\n      \n    </figure>\n\n    <h4 id=\"edge-mode\">\n      Edge mode\n    </h4>\n\n    <figure class=\"post__image post__image--center\">\n      <img decoding=\"async\" loading=\"lazy\" src=\"https://jonne-g.github.io/portfolio/media/posts/7/roof_generator-making_off-edge_selection.gif\" height=\"450\" width=\"800\" alt=\"edge selection in Maya\" />\n      \n    </figure>\n\n  <p>\n    One interesting note on the edge-mode is the additions of gables.<br>This was one of the requirements: an easy way of adding gables to the roofs.<br>In Houdini, the tool used groups for this, and to translate this to Maya, I used edge selection instead.\n  </p>\n\n  <p>\n    This \"one-click\" process is in part enabled by a maya shelf tool.<br>Once the user clicks this button a few things happen:\n  </p>\n\n  <ol>\n    <li>In case of face- or edge-selection, the actual selection is stored<br>&nbsp;and the whole object is selected instead</li><li>If not already loaded, Houdini engine is enabled</li><li>The roof-generator Maya-version is placed in the scene<br>with the object selection as its target</li><li>In case of face- or edge-selection, an additional two parameters are populated:<br>An \"id\" parameter passing through the type of the selection (face or edge),<br>and the selection in a way Houdini can read it</li><li>Finally, the roof-generator HDA is triggered again using a deferred-loading call.<br>This call is deferred as sometimes the HDA is placed before Houdini engine is<br>actually loaded.</li>\n  </ol>\n\n  <p>\n    Once this whole process is finished, the user will have a roof ready to export to game!\n  </p>\n\n    <h2 id=\"mayahda-wrapper\">\n      Maya-HDA wrapper\n    </h2>\n\n  <p>\n    In the placement process above I mentioned a Maya-version of the HDA.<br>This is referring to a HDA wrapper made to have Maya usage of Houdini much easier.<br>The wrapper contains a section that allows for specifying different behaviour for each type of component selection in Maya as well as the parameters to accompany it.\n  </p>\n\n  <p>\n    Of course it's not able to do all of this work alone, and on the Maya side it is paired with a python module that neatly wraps away the launching process mentioned above.<br>Because of this, anyone looking to launch a HDA in Maya, only needs a single function:<br>placeHda() or placeHdaWithSelection().<br>\n  </p>",
            "author": {
                "name": "Jonne Geven"
            },
            "tags": [
            ],
            "date_published": "2022-04-13T21:11:35+03:00",
            "date_modified": "2022-04-29T21:01:50+03:00"
        },
        {
            "id": "https://jonne-g.github.io/portfolio/material-browser/",
            "url": "https://jonne-g.github.io/portfolio/material-browser/",
            "title": "Material Browser",
            "summary": "&nbsp;The material-browser is an interface between the material-database on disk, and the user’s scene. Its main adoption has been in maya, but it is made to be easily adapted to other applications supporting Qt (described in the code-overview below). Before the interface, the users had&hellip;",
            "content_html": "<div><div class=\"post__iframe\"><iframe loading=\"lazy\" width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/nBhl2L7rIwE\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></div></div>\n\n  <p>\n    &nbsp;The material-browser is an interface between the material-database on disk, and the user’s  scene. Its main adoption has been in maya, but it is made to be easily adapted to other applications supporting Qt (described in the code-overview below).\n  </p>\n\n  <p>\n    Before the interface, the users had no easy way of importing materials into their scene without using an external application. Initially the material browser was only intended to import materials, but throughout development it also became the defacto tool for managing materials within the scene, and on objects (the scene- and selection tab).\n  </p>\n\n  <p>\n    Making this interface was my first introduction to Qt and UI programming, and over the various iterations the browser went through, I learned a lot about the various quirks and features of Qt, and how to maintain large python applications.&nbsp;<br>\n  </p>",
            "author": {
                "name": "Jonne Geven"
            },
            "tags": [
            ],
            "date_published": "2022-04-13T21:10:56+03:00",
            "date_modified": "2022-04-29T21:00:34+03:00"
        },
        {
            "id": "https://jonne-g.github.io/portfolio/contact/",
            "url": "https://jonne-g.github.io/portfolio/contact/",
            "title": "Contact",
            "summary": "LinkedIn:&nbsp;www.linkedin.com/in/jonne-geven/ Email:&nbsp;jonnegeven@outlook.com",
            "content_html": "\n  <p>\n    <strong>LinkedIn:&nbsp;</strong><a href=\"https://www.linkedin.com/in/jonne-geven/\">www.linkedin.com/in/jonne-geven/</a>\n  </p>\n\n  <p>\n    <b>Email:</b>&nbsp;jonnegeven@outlook.com\n  </p>\n\n  <p>\n    \n  </p>",
            "author": {
                "name": "Jonne Geven"
            },
            "tags": [
            ],
            "date_published": "2022-04-12T21:06:42+03:00",
            "date_modified": "2022-04-20T17:09:18+03:00"
        }
    ]
}
